---
- name: Do authentik things as authentik_user
  become: true
  become_user: "{{ authentik_user }}"
  block:
    - name: Get $HOME environment variable
      ansible.builtin.command: "echo $HOME"
      register: homepath
      changed_when: false
    - name: Create relevant configuration files
      ansible.builtin.file:
        path: "{{ homepath.stdout }}/authentik/{{ item }}"
        state: directory
        mode: '0755'
      loop: ["media", "custom-templates", "certs", "postgres", "redis"]
    - name: Create relevant podman pod  
      containers.podman.podman_pod:
        name: authentik_pod
        recreate: true
        userns: keep-id
        state: started
        ports:
          - "9000:9000"
          - "9443:9443"
          - "3389:3389"
          - "6636:3389"
    - name: Authentik postgres database
      containers.podman.podman_container:
        recreate: true
        state: started
        # userns: keep-uid
        name: authentik_postgres
        pod: authentik_pod
        image: "docker.io/library/postgres:12-alpine"
        # healthcheck: 
        volumes:
          - "{{ homepath.stdout }}/authentik/postgres:/var/lib/postgresql/data"
        env:
          AUTHENTIK_SECRET_KEY: "{{ authentik_secret_key }}"
          POSTGRES_PASSWORD: "{{ authentik_postgres_password }}"
          POSTGRES_USER: "{{ authentik_postgres_user }}"
          POSTGRES_DB: "{{ authentik_postgres_db }}"
    - name: Authentik Redis database
      containers.podman.podman_container:
        recreate: true
        state: started
        # userns: keep-uid
        name: authentik_redis
        pod: authentik_pod
        image: docker.io/library/redis:alpine
        command: --save 60 1 --loglevel warning
        env:
          AUTHENTIK_SECRET_KEY: "{{ authentik_secret_key }}"
        volumes:
          - "{{ homepath.stdout }}/authentik/redis:/data"
    - name: Create authentik server
      containers.podman.podman_container:
        recreate: true
        state: started
        name: authentik_server
        image: "ghcr.io/goauthentik/server:{{ authentik_tag }}"
        pod: authentik_pod
        env:
          AUTHENTIK_REDIS__HOST: localhost
          AUTHENTIK_POSTGRESQL__HOST: localhost
          AUTHENTIK_POSTGRESQL__USER: "{{ authentik_postgres_user}}"
          AUTHENTIK_POSTGRESQL__NAME: "{{ authentik_postgres_db }}"
          AUTHENTIK_POSTGRESQL__PASSWORD: "{{ authentik_postgres_password }}"
          AUTHENTIK_SECRET_KEY: "{{ authentik_secret_key }}"
        volumes:
            - "{{ homepath.stdout }}/authentik/media:/media"
            - "{{ homepath.stdout }}/authentik/certs:/certs"
            - "{{ homepath.stdout }}/authentik/custom-templates:/templates"
    - name: Create authentik worker
      containers.podman.podman_container:
        recreate: true
        state: started
        name: authentik_worker
        pod: authentik_pod
        image: "ghcr.io/goauthentik/server:{{ authentik_tag }}"
        command: worker
        env:
          AUTHENTIK_REDIS__HOST: localhost
          AUTHENTIK_POSTGRESQL__HOST: localhost
          AUTHENTIK_POSTGRESQL__USER: "{{ authentik_postgres_user}}"
          AUTHENTIK_POSTGRESQL__NAME: "{{ authentik_postgres_db }}"
          AUTHENTIK_POSTGRESQL__PASSWORD: "{{ authentik_postgres_password }}"
          AUTHENTIK_SECRET_KEY: "{{ authentik_secret_key }}"
        volumes:
          - "{{ homepath.stdout }}/authentik/media:/media"
          - "{{ homepath.stdout }}/authentik/certs:/certs"
          - "{{ homepath.stdout }}/authentik/custom-templates:/templates"
